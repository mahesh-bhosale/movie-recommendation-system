"""Add rating column to movies table

Revision ID: ba8053878cf8
Revises: a5cd268a518a
Create Date: 2025-04-01 10:07:42.223023

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba8053878cf8'
down_revision: Union[str, None] = 'a5cd268a518a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_ratings_id', table_name='user_ratings')
    op.drop_table('user_ratings')
    op.add_column('movies', sa.Column('rating', sa.Float(), nullable=True))
    op.drop_column('movies', 'poster_path')
    op.drop_column('movies', 'dataset_index')
    op.drop_column('movies', 'vote_average')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('movies', sa.Column('vote_average', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('movies', sa.Column('dataset_index', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('movies', sa.Column('poster_path', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('movies', 'rating')
    op.create_table('user_ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('movie_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], name='user_ratings_movie_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_ratings_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_ratings_pkey')
    )
    op.create_index('ix_user_ratings_id', 'user_ratings', ['id'], unique=False)
    # ### end Alembic commands ###
